<?php

/**
 * @file
 * Formball page and game elements
 */

/**
 * Implements hook_preprocess_page()
 * Adds the game.css stylesheet
 * @param $variables
 */

function formball_game_preprocess_page(&$variables) {
  $module_path = drupal_get_path('module', 'formball_game');
  drupal_add_css( $module_path . '/css/game.css', array(
    'group' => CSS_THEME,
  ));
}

/**
 * Implements hook_menu()
 */

function formball_game_menu() {
  $items['game'] = array(
    'title' => 'Title',
    'description' => 'Page and elements of the game',
    'page callback' => 'formball_game_board',
    'access callback' => TRUE,
  );

  $items['admin/config/game'] = array(
    'title' => 'Formball',
    'description' => 'formball configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('formball_game_admin_settings'),
    'access callback' => TRUE,
    'file' => 'formball_game.admin.inc',
    'file path' => drupal_get_path('module', 'formball_game'),
  );
  return $items;
}

function formball_game_board() {
  $build = array(
    'header' => array(
      '#type' => 'markup',
      '#markup' => 'Here goes the game elements',
    ),
    'game_table' => drupal_get_form('game_board_form'),
  );
  return $build;
}

function game_board_form ($form, &$form_submit) {

  /* create array for players checkboxes */
  $players = array('A', 'B');

  /* Logic to create form with appropriate checkboxes and its positions on table */
  foreach ($players as $player){
    for ($i=0; $i<9; $i++) {
      for($j=0; $j<5; $j++) {
        $row = $i + 1;
        $column = $j + 1;
        $key = 'player_' . $player . '_' . $row . '_' . $column;
        // create 4 checkboxes on even rows, 5 on odd
        if($i % 2 == 1 && $j == 4) break;
        $form[$key] = array(
          '#title' => '',
          '#type' => 'checkbox',
          '#attributes' => array(
            'class' => array('input-' . $key, 'form-checkbox'),
          ),
        );
      }
    }
  }

  /* Create array for Ball positions */
  $options = array();
  for ($i=0; $i<9; $i++) {
    for ($j = 0; $j < 5; $j++) {
      $row = $i + 1;
      $column = $j + 1;
      $options["ball_{$row}_{$column}"] = "ball_{$row}_{$column}";
    }
  }

  $form['ball'] = [
    '#title' => '',
    '#type' => 'radios',
    '#default_value' => variable_get('comment_preview', 1),
    '#options' => $options,
  ];
  return $form;
}


/**
 * Implements hook_theme()
 * Point to the theme for the game elements
 */

function formball_game_theme ($existing, $type, $theme, $path){
  $module_path = drupal_get_path('module', 'formball_game');
  $items['game_board_form'] = array (
    'render element' => 'form',
    'template' => 'game',
    'path' => $module_path . '/theme',
  );
  return $items;
}

